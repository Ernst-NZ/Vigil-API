//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SignUp.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBModelBorn : DbContext
    {
        public DBModelBorn()
            : base("name=DBModelBorn")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public virtual DbSet<AspNetRole> AspNetRoles { get; set; }
        public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }
        public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }
        public virtual DbSet<AspNetUser> AspNetUsers { get; set; }
        public virtual DbSet<info> infoes { get; set; }
        public virtual DbSet<Child> Children { get; set; }
        public virtual DbSet<calendar> calendars { get; set; }
        public virtual DbSet<AggregatedCounter> AggregatedCounters { get; set; }
        public virtual DbSet<Job> Jobs { get; set; }
        public virtual DbSet<JobParameter> JobParameters { get; set; }
        public virtual DbSet<List> Lists { get; set; }
        public virtual DbSet<Schema> Schemata { get; set; }
        public virtual DbSet<State> States { get; set; }
        public virtual DbSet<Counter> Counters { get; set; }
        public virtual DbSet<Hash> Hashes { get; set; }
        public virtual DbSet<JobQueue> JobQueues { get; set; }
        public virtual DbSet<Server> Servers { get; set; }
        public virtual DbSet<Set> Sets { get; set; }
        public virtual DbSet<UserInfo> UserInfoes { get; set; }
    
        public virtual ObjectResult<getCalendarList_Result> getCalendarList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCalendarList_Result>("getCalendarList");
        }
    
        public virtual ObjectResult<getCalendarListByClient_Result> getCalendarListByClient(string clientId)
        {
            var clientIdParameter = clientId != null ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCalendarListByClient_Result>("getCalendarListByClient", clientIdParameter);
        }
    
        public virtual ObjectResult<getCalendarWeek_Result> getCalendarWeek(string startDate, string endDate)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCalendarWeek_Result>("getCalendarWeek", startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<getCalendarWeekClient_Result> getCalendarWeekClient(string startDate, string endDate, Nullable<int> clientId)
        {
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("clientId", clientId) :
                new ObjectParameter("clientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getCalendarWeekClient_Result>("getCalendarWeekClient", startDateParameter, endDateParameter, clientIdParameter);
        }
    
        public virtual ObjectResult<getChildren_Result> getChildren(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getChildren_Result>("getChildren", userIdParameter);
        }
    
        public virtual ObjectResult<getUserInfo_Result> getUserInfo(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserInfo_Result>("getUserInfo", userNameParameter);
        }
    
        public virtual ObjectResult<getUserList_Result> getUserList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getUserList_Result>("getUserList");
        }
    
        public virtual int setEmail(string userId)
        {
            var userIdParameter = userId != null ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setEmail", userIdParameter);
        }
    }
}
